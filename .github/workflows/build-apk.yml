name: Build APK

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}-ccache-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-ccache-
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x gradlew
    
    - name: Get version information
      id: version
      run: |
        VERSION_NAME=$(grep 'projectVersionName' gradle/libs.versions.toml | cut -d'"' -f2)
        VERSION_CODE=$(grep 'projectVersionCode' gradle/libs.versions.toml | cut -d'"' -f2)
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "build_date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
    
    - name: Build debug APK
      env:
        CCACHE_DIR: ${{ github.workspace }}/.ccache
      run: |
        echo "Building debug APK..."
        ./gradlew assembleDebug --stacktrace --info --build-cache --configuration-cache
        echo "Debug APK build completed"
    
    - name: Build release APK
      env:
        CCACHE_DIR: ${{ github.workspace }}/.ccache
      run: |
        echo "Building release APK..."
        ./gradlew assembleRelease --stacktrace --info --build-cache --configuration-cache
        echo "Release APK build completed"
    
    - name: Upload debug APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: BHub-v${{ steps.version.outputs.version_name }}-debug-${{ steps.version.outputs.build_date }}
        path: app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
    
    - name: Upload release APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: BHub-v${{ steps.version.outputs.version_name }}-release-${{ steps.version.outputs.build_date }}
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 30
    
    - name: Upload build logs and info
      uses: actions/upload-artifact@v4
      with:
        name: build-info-${{ steps.version.outputs.build_date }}
        path: |
          app/build/outputs/apk/debug/output-metadata.json
          app/build/outputs/apk/release/output-metadata.json
          app/build/outputs/logs/
        retention-days: 7
        if-no-files-found: ignore
        
    - name: Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Version:** ${{ steps.version.outputs.version_name }} (${{ steps.version.outputs.version_code }})" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date:** ${{ steps.version.outputs.build_date }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### APK Files Generated:" >> $GITHUB_STEP_SUMMARY
        if [ -f app/build/outputs/apk/debug/app-debug.apk ]; then
          echo "✅ Debug APK: $(ls -lh app/build/outputs/apk/debug/app-debug.apk | awk '{print $5}')" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -f app/build/outputs/apk/release/app-release.apk ]; then
          echo "✅ Release APK: $(ls -lh app/build/outputs/apk/release/app-release.apk | awk '{print $5}')" >> $GITHUB_STEP_SUMMARY
        fi